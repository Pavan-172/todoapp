{"version":3,"sources":["App.js","index.js"],"names":["App","firstRender","useRef","useState","inputValue","setInputValue","todos","setTodos","useEffect","current","localStorage","setItem","JSON","stringify","getItem","newTodos","parse","className","onSubmit","e","preventDefault","trim","text","id","uuidv4","type","placeholder","value","onChange","target","map","todo","onClick","filter","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+LAIe,SAASA,IACpB,IAAMC,EAAcC,kBAAO,GADD,EAGUC,mBAAS,IAHnB,mBAGnBC,EAHmB,KAGPC,EAHO,OAIAF,mBAAS,IAJT,mBAInBG,EAJmB,KAIZC,EAJY,KA2C1B,OAhBAC,qBAAU,WACFP,EAAYQ,QACZR,EAAYQ,SAAU,EAEtBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAL,YAAmBP,OAErD,CAACA,IAGJE,qBAAU,WACN,GAAqC,OAAjCE,aAAaI,QAAQ,QAAkB,CACvC,IAAMC,EAAWL,aAAaI,QAAQ,QACtCP,EAASK,KAAKI,MAAL,sBAAeV,GAAf,CAAsBS,SAEpC,IAEM,qBAAME,UAAY,MAAlB,SACD,sBACIA,UAAY,YADhB,UAEA,uBACKC,SAzCG,SAACC,GACbA,EAAEC,iBAEwB,KAAtBhB,EAAWiB,SAEfd,EAAS,GAAD,mBACDD,GADC,CAEJ,CACIgB,KAAMlB,EACNmB,GAAIC,kBAGZnB,EAAc,MA4BV,UAEA,uBACMoB,KAAO,OACbC,YAAc,iBACdC,MAAUvB,EACVwB,SACI,SAACT,GAAD,OAAOd,EAAcc,EAAEU,OAAOF,UAPlC,IASG,wBAAQF,KAAO,SAAf,sBAXH,IAaAnB,EAAMwB,KAAI,SAACC,GACP,OAAS,sBACLd,UAAY,OADP,UAEL,kCACMc,EAAKT,KADX,OAFK,MAGoB,mBACvBU,QACE,kBAzCAT,EAyCiBQ,EAAKR,QAxCtChB,EAASD,EAAM2B,QAAO,SAACF,GAAD,OAAUA,EAAKR,KAAOA,MAD7B,IAACA,GA2CJN,UAAY,uBAPOc,EAAKR,OAdhC,SC3CZ,IAAMW,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACtC,EAAD,IAASkC,K","file":"static/js/main.cba11441.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./styles.css\";\n\nexport default function App() {\n    const firstRender = useRef(true); // to save to local storage and not to remove when refreshed we use use ref...\n\n    const [inputValue, setInputValue] = useState(\"\"); //for input values\n    const [todos, setTodos] = useState([]); //for todo's array\n\n    const addToDo = (e) => {\n        e.preventDefault(); //to stop reloading the page\n\n        if (inputValue.trim() === \"\") return; // to avoid empty string only with spaces and to remove unwanted spaces\n\n        setTodos([\n            ...todos,\n            {\n                text: inputValue, //the input value we are typing\n                id: uuidv4()\n            }\n        ]);\n        setInputValue(\"\"); //to make the input box empty after adding the task\n    };\n\n    //to remove task\n    const removeTodo = (id) => {\n        setTodos(todos.filter((todo) => todo.id !== id));\n    };\n\n    //to save todos in local storage\n    useEffect(() => {\n        if (firstRender.current) {\n            firstRender.current = false;\n        } else {\n            localStorage.setItem(\"Todo\", JSON.stringify([...todos]));\n        }\n    }, [todos]);\n\n    //to get them on to display from local storage\n    useEffect(() => {\n        if (localStorage.getItem(\"Todo\") !== null) {\n            const newTodos = localStorage.getItem(\"Todo\");\n            setTodos(JSON.parse([...todos, newTodos]));\n        }\n    }, []);\n\n    return ( < div className = \"App\" >\n            <\n            div className = \"container\" >\n            <\n            form onSubmit = { addToDo } >\n            <\n            input type = \"text\"\n            placeholder = \"Add a Task !!!\"\n            value = { inputValue }\n            onChange = {\n                (e) => setInputValue(e.target.value)\n            }\n            /> <button type = \"submit\" > Add </button >\n            </form> {\n            todos.map((todo) => {\n                return ( < div key = { todo.id }\n                    className = \"todo\" >\n                    <\n                    p > { todo.text } </p>   <\n                    i onClick = {\n                        () => removeTodo(todo.id)\n                    }\n                    className = \"fas fa-trash-alt\" >\n                    </i> \n                     </div>\n                );\n            })\n        } </div> \n         </div>\n);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n"],"sourceRoot":""}